/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Algoritmo;

import java.util.concurrent.ThreadLocalRandom;

/**
 *
 * @author andre
 */
public class CountingSort extends javax.swing.JFrame {
    int[] numeros;
    int movimientos, comparaciones;
    long start, end;
    /**
     * Creates new form CountingSort
     */
    public CountingSort() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnDel = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtRes = new javax.swing.JTextArea();
        btnDoDes = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        btnRandom = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtNum = new javax.swing.JTextField();
        btnDoAsc = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnDel.setText("Limpiar");
        btnDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelActionPerformed(evt);
            }
        });

        txtRes.setEditable(false);
        txtRes.setColumns(20);
        txtRes.setRows(5);
        txtRes.setEnabled(false);
        jScrollPane1.setViewportView(txtRes);

        btnDoDes.setText("Ordenar Descendente");
        btnDoDes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDoDesActionPerformed(evt);
            }
        });

        btnBack.setText("Regresar");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnRandom.setText("Crear arreglo random");
        btnRandom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRandomActionPerformed(evt);
            }
        });

        jLabel1.setText("Escribir los números a ordenar separados por comas:");

        btnDoAsc.setText("Ordenar Ascendente");
        btnDoAsc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDoAscActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 25, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnDoAsc, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnRandom, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(txtNum, javax.swing.GroupLayout.PREFERRED_SIZE, 588, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(25, 25, 25))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnDoDes, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(btnDel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 590, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnBack)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBack)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1))
                    .addComponent(btnRandom))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDoAsc)
                    .addComponent(btnDoDes))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnDel)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelActionPerformed
        Limpiar();
    }//GEN-LAST:event_btnDelActionPerformed

    private void btnDoDesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDoDesActionPerformed
        String[] arreglo = txtNum.getText().split(",");
        numeros = new int[arreglo.length];
        for(int i = 0; i < arreglo.length; i++){
            numeros[i] = Integer.parseInt(arreglo[i]);
        }
        start = System.nanoTime();
        CountSort(numeros);
        end = System.nanoTime();
        for(int i = 0; i < numeros.length / 2; i++)
{
    int temp = numeros[i];
    numeros[i] = numeros[numeros.length - i - 1];
    numeros[numeros.length - i - 1] = temp;
}
        Imprimir();
    }//GEN-LAST:event_btnDoDesActionPerformed
    

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnRandomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRandomActionPerformed
        txtNum.setText("");
        int tamaño, random;
        tamaño = ThreadLocalRandom.current().nextInt(2,25 + 1);
        String cadena = "";
        for(int i = 0; i < tamaño; i++){
            random = ThreadLocalRandom.current().nextInt(0,999 + 1);
            cadena += random + ",";
        }
        random = ThreadLocalRandom.current().nextInt(0,999 + 1);
        cadena += random;
        txtNum.setText(cadena);
    }//GEN-LAST:event_btnRandomActionPerformed

    private void btnDoAscActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDoAscActionPerformed
        String[] arreglo = txtNum.getText().split(",");
        numeros = new int[arreglo.length];
        for(int i = 0; i < arreglo.length; i++){
            numeros[i] = Integer.parseInt(arreglo[i]);
        }
        start = System.nanoTime();
        CountSort(numeros);
        end = System.nanoTime();
        Imprimir();
    }//GEN-LAST:event_btnDoAscActionPerformed

    private void CountSort(int[] array)
        {
            int min = 0;
            int max = 0;

            for (int i = 0; i < array.length; i++)
            {

                if (array[i] < min)
                {
                    min = array[i];
                    comparaciones++;
                }
                if (array[i] > max)
                {
                    max = array[i];
                    comparaciones++;
                }
            }
            int[] count = new int[max - min + 1];
            int z = 0;
            for (int i = 0; i < count.length; i++)
            {
                count[i] = 0;
            }
            for (int i = 0; i < array.length; i++)
            {
                count[array[i] - min]++;
            }
            for (int i = min; i <= max; i++)
            {
                while (count[i - min]-- > 0)
                {
                    array[z] = i;
                    ++z;
                    movimientos++;
                }
            }
        }
    
    private void Imprimir()
    {
        String cadena = "Arreglo ordenado: ";
        double duration = (end - start)/1000000.0;
        for (int i = 0; i < numeros.length; i++)
        {
            cadena += numeros[i] + ", ";
        }
        cadena += "\nMovimientos: " + movimientos + "\nComparaciones: " + comparaciones + "\nTiempo: " + duration;
        txtRes.setText(cadena);
        movimientos = comparaciones = 0;
        start = end = 0;
    }
    
    private void Limpiar(){
        txtNum.setText("");
        txtRes.setText("");
        start = end = 0;
        movimientos = comparaciones = 0;
        numeros = null;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CountingSort.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CountingSort.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CountingSort.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CountingSort.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CountingSort().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDel;
    private javax.swing.JButton btnDoAsc;
    private javax.swing.JButton btnDoDes;
    private javax.swing.JButton btnRandom;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtNum;
    private javax.swing.JTextArea txtRes;
    // End of variables declaration//GEN-END:variables
}
